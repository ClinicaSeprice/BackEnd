// <auto-generated />
using System;
using ClinicaSepriceAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClinicaSepriceAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241031041919_modificoRolFechaBaja")]
    partial class modificoRolFechaBaja
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ClinicaSepriceAPI.Models.DetalleLiquidacionMedico", b =>
                {
                    b.Property<int>("IdDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdDetalle"));

                    b.Property<int>("IdLiquidacion")
                        .HasColumnType("int");

                    b.Property<int>("IdTurno")
                        .HasColumnType("int");

                    b.Property<decimal>("MontoLiquidado")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("MontoTurno")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("IdDetalle");

                    b.HasIndex("IdLiquidacion");

                    b.HasIndex("IdTurno");

                    b.ToTable("DetallesLiquidacionesMedicos");
                });

            modelBuilder.Entity("ClinicaSepriceAPI.Models.Direccion", b =>
                {
                    b.Property<int>("IdDireccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdDireccion"));

                    b.Property<bool>("Baja")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Calle")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Ciudad")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CodigoPostal")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Complemento")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdPersona")
                        .HasColumnType("int");

                    b.Property<string>("Numero")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Provincia")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdDireccion");

                    b.HasIndex("IdPersona");

                    b.ToTable("Direcciones");
                });

            modelBuilder.Entity("ClinicaSepriceAPI.Models.Factura", b =>
                {
                    b.Property<int>("IdFactura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdFactura"));

                    b.Property<DateTime>("FechaPago")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdMetodoPago")
                        .HasColumnType("int");

                    b.Property<int>("IdPlanObraSocial")
                        .HasColumnType("int");

                    b.Property<int>("IdTurno")
                        .HasColumnType("int");

                    b.Property<decimal>("MontoPaciente")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("MontoTotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("NumeroTransaccion")
                        .HasColumnType("longtext");

                    b.HasKey("IdFactura");

                    b.HasIndex("IdMetodoPago");

                    b.HasIndex("IdPlanObraSocial");

                    b.HasIndex("IdTurno");

                    b.ToTable("Facturas");
                });

            modelBuilder.Entity("ClinicaSepriceAPI.Models.HistoriaClinica", b =>
                {
                    b.Property<int>("IdHistoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdHistoria"));

                    b.Property<decimal>("Altura")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Antecedentes")
                        .HasColumnType("longtext");

                    b.Property<string>("Diagnosticos")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaApertura")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdPersona")
                        .HasColumnType("int");

                    b.Property<decimal>("Imc")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Peso")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Tratamientos")
                        .HasColumnType("longtext");

                    b.HasKey("IdHistoria");

                    b.HasIndex("IdPersona")
                        .IsUnique();

                    b.ToTable("HistoriasClinicas");
                });

            modelBuilder.Entity("ClinicaSepriceAPI.Models.HorarioDisponible", b =>
                {
                    b.Property<int>("IdHorario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdHorario"));

                    b.Property<bool>("Baja")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Estado")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<TimeSpan>("HoraFin")
                        .HasColumnType("time(6)");

                    b.Property<TimeSpan>("HoraInicio")
                        .HasColumnType("time(6)");

                    b.Property<int>("IdMedico")
                        .HasColumnType("int");

                    b.HasKey("IdHorario");

                    b.HasIndex("IdMedico");

                    b.ToTable("HorariosDisponibles");
                });

            modelBuilder.Entity("ClinicaSepriceAPI.Models.LiquidacionMedico", b =>
                {
                    b.Property<int>("IdLiquidacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdLiquidacion"));

                    b.Property<DateTime>("FechaLiquidacion")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdMedico")
                        .HasColumnType("int");

                    b.Property<int>("IdMetodoPago")
                        .HasColumnType("int");

                    b.Property<decimal>("MontoTotal")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("NumeroTransaccion")
                        .HasColumnType("longtext");

                    b.Property<decimal>("Porcentaje")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("IdLiquidacion");

                    b.HasIndex("IdMedico");

                    b.HasIndex("IdMetodoPago");

                    b.ToTable("LiquidacionesMedicos");
                });

            modelBuilder.Entity("ClinicaSepriceAPI.Models.Medico", b =>
                {
                    b.Property<int>("IdPersona")
                        .HasColumnType("int");

                    b.Property<bool>("Baja")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Especialidad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Legajo")
                        .HasColumnType("int");

                    b.HasKey("IdPersona");

                    b.ToTable("Medicos");
                });

            modelBuilder.Entity("ClinicaSepriceAPI.Models.MetodoPago", b =>
                {
                    b.Property<int>("IdMetodoPago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdMetodoPago"));

                    b.Property<bool>("Habilitado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdMetodoPago");

                    b.ToTable("MetodosPago");
                });

            modelBuilder.Entity("ClinicaSepriceAPI.Models.ObraSocial", b =>
                {
                    b.Property<int>("IdObraSocial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdObraSocial"));

                    b.Property<int>("Cuit")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("baja")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("IdObraSocial");

                    b.ToTable("ObrasSociales");
                });

            modelBuilder.Entity("ClinicaSepriceAPI.Models.Persona", b =>
                {
                    b.Property<int>("IdPersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdPersona"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("Baja")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Dni")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.HasKey("IdPersona");

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("ClinicaSepriceAPI.Models.PersonaRol", b =>
                {
                    b.Property<int>("IdPersona")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("IdRol")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<bool>("Baja")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.HasKey("IdPersona", "IdRol");

                    b.HasIndex("IdRol");

                    b.ToTable("PersonaRoles");
                });

            modelBuilder.Entity("ClinicaSepriceAPI.Models.Personal", b =>
                {
                    b.Property<int>("IdPersona")
                        .HasColumnType("int");

                    b.Property<bool>("Baja")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaContratacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Legajo")
                        .HasColumnType("int");

                    b.HasKey("IdPersona");

                    b.ToTable("Personal");
                });

            modelBuilder.Entity("ClinicaSepriceAPI.Models.PlanObraSocial", b =>
                {
                    b.Property<int>("IdPlan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdPlan"));

                    b.Property<decimal>("Cobertura")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdObraSocial")
                        .HasColumnType("int");

                    b.Property<string>("NombrePlan")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("baja")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("IdPlan");

                    b.HasIndex("IdObraSocial");

                    b.ToTable("PlanesObraSocial");
                });

            modelBuilder.Entity("ClinicaSepriceAPI.Models.PorcentajePagoMedico", b =>
                {
                    b.Property<int>("IdPorcentaje")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdPorcentaje"));

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdMedico")
                        .HasColumnType("int");

                    b.Property<decimal>("Porcentaje")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("IdPorcentaje");

                    b.HasIndex("IdMedico");

                    b.ToTable("PorcentajesPagoMedicos");
                });

            modelBuilder.Entity("ClinicaSepriceAPI.Models.Rol", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdRol"));

                    b.Property<bool>("Baja")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("FechaAlta")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaBaja")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NombreRol")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdRol");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("ClinicaSepriceAPI.Models.Turno", b =>
                {
                    b.Property<int>("IdTurno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdTurno"));

                    b.Property<bool>("Baja")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Estado")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdHorario")
                        .HasColumnType("int");

                    b.Property<int>("IdMedico")
                        .HasColumnType("int");

                    b.Property<int>("IdPersona")
                        .HasColumnType("int");

                    b.Property<string>("Motivo")
                        .HasColumnType("longtext");

                    b.Property<string>("Notas")
                        .HasColumnType("longtext");

                    b.HasKey("IdTurno");

                    b.HasIndex("IdHorario");

                    b.HasIndex("IdMedico");

                    b.HasIndex("IdPersona");

                    b.ToTable("Turnos");
                });

            modelBuilder.Entity("ClinicaSepriceAPI.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<bool>("Baja")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("IdPersona")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdUsuario");

                    b.HasIndex("IdPersona")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ClinicaSepriceAPI.Models.DetalleLiquidacionMedico", b =>
                {
                    b.HasOne("ClinicaSepriceAPI.Models.LiquidacionMedico", "LiquidacionMedico")
                        .WithMany("Detalles")
                        .HasForeignKey("IdLiquidacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClinicaSepriceAPI.Models.Turno", "Turno")
                        .WithMany()
                        .HasForeignKey("IdTurno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LiquidacionMedico");

                    b.Navigation("Turno");
                });

            modelBuilder.Entity("ClinicaSepriceAPI.Models.Direccion", b =>
                {
                    b.HasOne("ClinicaSepriceAPI.Models.Persona", "Persona")
                        .WithMany("Direcciones")
                        .HasForeignKey("IdPersona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("ClinicaSepriceAPI.Models.Factura", b =>
                {
                    b.HasOne("ClinicaSepriceAPI.Models.MetodoPago", "MetodoPago")
                        .WithMany()
                        .HasForeignKey("IdMetodoPago")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClinicaSepriceAPI.Models.PlanObraSocial", "PlanObraSocial")
                        .WithMany()
                        .HasForeignKey("IdPlanObraSocial")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClinicaSepriceAPI.Models.Turno", "Turno")
                        .WithMany("Facturas")
                        .HasForeignKey("IdTurno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MetodoPago");

                    b.Navigation("PlanObraSocial");

                    b.Navigation("Turno");
                });

            modelBuilder.Entity("ClinicaSepriceAPI.Models.HistoriaClinica", b =>
                {
                    b.HasOne("ClinicaSepriceAPI.Models.Persona", "Persona")
                        .WithOne("HistoriaClinica")
                        .HasForeignKey("ClinicaSepriceAPI.Models.HistoriaClinica", "IdPersona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("ClinicaSepriceAPI.Models.HorarioDisponible", b =>
                {
                    b.HasOne("ClinicaSepriceAPI.Models.Medico", "Medico")
                        .WithMany("HorariosDisponibles")
                        .HasForeignKey("IdMedico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medico");
                });

            modelBuilder.Entity("ClinicaSepriceAPI.Models.LiquidacionMedico", b =>
                {
                    b.HasOne("ClinicaSepriceAPI.Models.Medico", "Medico")
                        .WithMany("Liquidaciones")
                        .HasForeignKey("IdMedico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClinicaSepriceAPI.Models.MetodoPago", "MetodoPago")
                        .WithMany()
                        .HasForeignKey("IdMetodoPago")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medico");

                    b.Navigation("MetodoPago");
                });

            modelBuilder.Entity("ClinicaSepriceAPI.Models.Medico", b =>
                {
                    b.HasOne("ClinicaSepriceAPI.Models.Persona", "Persona")
                        .WithOne("Medico")
                        .HasForeignKey("ClinicaSepriceAPI.Models.Medico", "IdPersona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("ClinicaSepriceAPI.Models.PersonaRol", b =>
                {
                    b.HasOne("ClinicaSepriceAPI.Models.Persona", "Persona")
                        .WithMany("PersonaRoles")
                        .HasForeignKey("IdPersona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClinicaSepriceAPI.Models.Rol", "Rol")
                        .WithMany("PersonaRoles")
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("ClinicaSepriceAPI.Models.Personal", b =>
                {
                    b.HasOne("ClinicaSepriceAPI.Models.Persona", "Persona")
                        .WithOne("Personal")
                        .HasForeignKey("ClinicaSepriceAPI.Models.Personal", "IdPersona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("ClinicaSepriceAPI.Models.PlanObraSocial", b =>
                {
                    b.HasOne("ClinicaSepriceAPI.Models.ObraSocial", "ObraSocial")
                        .WithMany("Planes")
                        .HasForeignKey("IdObraSocial")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ObraSocial");
                });

            modelBuilder.Entity("ClinicaSepriceAPI.Models.PorcentajePagoMedico", b =>
                {
                    b.HasOne("ClinicaSepriceAPI.Models.Medico", "Medico")
                        .WithMany("Porcentajes")
                        .HasForeignKey("IdMedico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medico");
                });

            modelBuilder.Entity("ClinicaSepriceAPI.Models.Turno", b =>
                {
                    b.HasOne("ClinicaSepriceAPI.Models.HorarioDisponible", "HorarioDisponible")
                        .WithMany("Turnos")
                        .HasForeignKey("IdHorario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClinicaSepriceAPI.Models.Medico", "Medico")
                        .WithMany("Turnos")
                        .HasForeignKey("IdMedico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClinicaSepriceAPI.Models.Persona", "Persona")
                        .WithMany("Turnos")
                        .HasForeignKey("IdPersona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HorarioDisponible");

                    b.Navigation("Medico");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("ClinicaSepriceAPI.Models.Usuario", b =>
                {
                    b.HasOne("ClinicaSepriceAPI.Models.Persona", "Persona")
                        .WithOne("Usuario")
                        .HasForeignKey("ClinicaSepriceAPI.Models.Usuario", "IdPersona")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("ClinicaSepriceAPI.Models.HorarioDisponible", b =>
                {
                    b.Navigation("Turnos");
                });

            modelBuilder.Entity("ClinicaSepriceAPI.Models.LiquidacionMedico", b =>
                {
                    b.Navigation("Detalles");
                });

            modelBuilder.Entity("ClinicaSepriceAPI.Models.Medico", b =>
                {
                    b.Navigation("HorariosDisponibles");

                    b.Navigation("Liquidaciones");

                    b.Navigation("Porcentajes");

                    b.Navigation("Turnos");
                });

            modelBuilder.Entity("ClinicaSepriceAPI.Models.ObraSocial", b =>
                {
                    b.Navigation("Planes");
                });

            modelBuilder.Entity("ClinicaSepriceAPI.Models.Persona", b =>
                {
                    b.Navigation("Direcciones");

                    b.Navigation("HistoriaClinica");

                    b.Navigation("Medico");

                    b.Navigation("PersonaRoles");

                    b.Navigation("Personal");

                    b.Navigation("Turnos");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ClinicaSepriceAPI.Models.Rol", b =>
                {
                    b.Navigation("PersonaRoles");
                });

            modelBuilder.Entity("ClinicaSepriceAPI.Models.Turno", b =>
                {
                    b.Navigation("Facturas");
                });
#pragma warning restore 612, 618
        }
    }
}
